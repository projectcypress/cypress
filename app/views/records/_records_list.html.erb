<!-- Only grab measure records and result values once to avoid duplicate queries -->
<% (pop_set_key = pop_set_key || measure.key_for_population_set(population_set_hash)) if measure %>
<% if measure && patients.length.positive? %>
  <% measure_records = records_by_measure(patients, measure, product_test, vendor, pop_set_key) %>
  <% population_keys = measure.population_keys %>
  <% result_values = get_result_values(patients, [measure], pop_set_key, population_keys, 'patient_id') %>
  <% observation_values = get_observation_values(patients, [measure], pop_set_key, 'patient_id') %>
<% end %>
<h1><%= measure ? measure_display_name(measure, population_set_hash, pop_set_key) : 'All' %> Patients</h1>
<% if (measure && measure_records.length.positive?) || (!measure  && patients.length.positive?) %>

<% if @vendor %>
  <%= link_to "View Patient Analytics", patient_analysis_vendor_records_path(:vendor_id => @vendor.id, :bundle_id => @bundle.id) %>
  <br>
  <br>
  <button class="btn btn-primary pull-left" type="button" id="vendor-patient-select-all" value="unchecked" title="Select All">
    <i class="fa fa-square" aria-hidden="true"></i> <span id="vendor-patient-select-all-text">Select All</span>
  </button>
  <br>
  <br>
<% end %>
<table class="table table-condensed table-hover patient_table">
  <thead>
    <tr>
      <% if vendor %>
        <th scope="col">Select</th>
      <% end%>
      <th scope="col">Patient Name</th>
      <% if product_test && !hide_patient_calculation? %>
        <th scope="col">Template Name</th>
      <%end%>
      <th scope="col">DOB</th>
      <th scope="col">Gender</th>
      <% if vendor %>
        <th scope="col">Last Updated</th>
      <% end%>
      <% if measure && !hide_patient_calculation?%>
        <% population_keys.each do |population| %>
          <th scope="col" class="text-center"><%= population_label(bundle, population) %></th>
        <% end %>
        <!-- If measure calculations include observation_values, include a column to display them. -->
        <% unless observation_values.values.compact.empty? %>
          <th scope="col" class="text-center"><%= "OBSERV" %></th>
        <% end %>
      <% end %>
    </tr>
  </thead>
  <% if measure && !(product_test && hide_patient_calculation?) %>
  <tfoot style="border-top: 2px solid #ddd;">
      <!-- will show aggregate record populations -->
      <tr>
        <%# add an extra cell for delete column -> could be delete all option? %>
        <%# add an extra cell for Last Updated %>
        <% if @vendor %>
          <td></td>
          <td></td>
        <% end %>
        <th scope="row">Total</th>
        <% if product_test && !hide_patient_calculation? %>
          <td></td>
        <%end%>
        <td></td>
        <td></td>
        <!-- will show calculation results for product test records -->
          <% pop_sums(result_values)&.each do |_, value| %>
            <td class="text-center">
              <%= render 'calculation_result_icon', :result => value, :episode_of_care => measure.calculation_method == 'EPISODE_OF_CARE'  %>
            </td>
          <% end %>
      </tr>
  </tfoot>
  <% end %>

  <tbody>
    <%= render 'calculation_results',
      :patients => (measure && !product_test) ? measure_records : patients,
      :product_test => product_test,
      :result_values => result_values,
      :observation_values => observation_values,
      :bundle => bundle,
      :measure => measure,
      :task => task
    %>
  </tbody>
</table>

<% else %>
<p>No patient results for the current criteria.</p>
<% end %>

<% if vendor %>
  <%# Making the checkbox-danger-panel its own class so its behavior doesn't affect any other danger panels%>
  <div class = 'checkbox-danger-panel d-none'>
    <%= render 'remove_panel', :name => vendor.name, :type => 'Selected Patients', :message => 'Deletion is permanent and cannot be undone. Be sure you want to do this.', :delete_path => destroy_multiple_vendor_records_path(vendor), :action => 'destroy_multiple' %>
  </div>
  <%= render 'action_modal' %>

  <script>
    $('.patient_table').DataTable({
      destroy: true,
      searching: false,
      paging: true,
      lengthMenu: [ [ 10, 25, 50, 100, -1], [10, 25, 50, 100, "All"] ],
      stateSave: true, /* preserves order on reload */
      info: false
    });
  </script>
<% end%>
