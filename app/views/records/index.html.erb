<% if @vendor || (@task && @product_test) %>

  <div class="pull-right button-row">
    <% if @measure && @measure.population_sets_and_stratifications_for_measure.size > 1 %>
      <div class="btn-group">
        <button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown">Sub measures <span class="caret"></span>
        </button>
        <ul class="dropdown-menu">
          <% @measure.population_sets_and_stratifications_for_measure.each do |population_set_hash| %>
            <li><%= link_to "#{measure_display_name(@measure, population_set_hash)}", { controller: 'records', task_id: @task.id, population_set_hash: population_set_hash}, method: :get %></li>
          <% end %>
        </ul>
      </div>
    <% end %>
    <%# TODO: add button to download html patients for vendor?? #%>
    <%# add patients option #%>
    <% if @vendor %>
      <%= button_to "+ Import Patients", new_vendor_record_path(@vendor.id), :method => :get, :class => "btn btn-primary pull-right" %>

    <% else %>
      <%= button_to html_patients_product_test_path(@product_test), :method => :get, :class => "btn btn-default" do %>
        <%= icon('fas fa-fw', 'download', :"aria-hidden" => true) %> Download HTML Patients
      <% end %>
    <% end %>
  </div>
  <h1>Patient List</h1>

<% else %>
  <h1>Master Patient List</h1>

  <div class="row">
    <div class="col-md-5 col-sm-6">
      <h1>Filter Patients</h1>
      <div class="form-group">
        <label for="search_measures">Type to search by measure</label>
        <input id="search_measures" type="search" class="form-control" placeholder="Type the name or CMS ID of a measure"/>
      </div>
    </div>

    <% if !@task && !@product_test %>
      <div class="col-md-7 col-sm-6">
        <h1>Annual Update Bundle</h1>
        <div>
          <% if Bundle.available.count == 1 %>
          <div class="radio" style="padding: 6px 0px; display: inline-block">
            <!-- label --> <%= @bundle.title %>
          </div>
          <div class="radio download-btn" id=<%= @bundle.id %>>
            <%= render "mpl_download", :bundle => @bundle %>
          </div>
          <% else %>
            <!-- loop through bundles & use radio buttons -->
            <%= bootstrap_form_tag do |f| %>
              <%= f.form_group :bundle_id do %>
                <% Bundle.available.all.each do |bundle| %>
                  <div style="display: inline-block">
                    <%= f.radio_button :bundle_id, bundle.id, label: bundle.title, label_class: "btn btn-checkbox",
                                       checked: bundle == @bundle %>
                  </div>
                  <div class="radio download-btn" id='<%= bundle.id %>'>
                    <%= render "mpl_download", :bundle => bundle %>
                  </div>
                <% end # bundle loop %>
              <% end # form_group %>
            <% end # form tag %>
          <% end # bundles.count %>
        </div>
      </div>
    <% end %>
  </div>

<% end %>

<% cache [@patients, @measure, hide_patient_calculation?] do %>
  <div class="row">
    <div id="records_list" class="col-sm-12">
      <%= render 'records_list', :patients => @vendor ? @vendor.patients : @patients, :measure => @measure, :population_set_hash => @population_set_hash, :product_test => @product_test, :bundle => @bundle, :task => @task %>
    </div>
  </div>
<% end #cache records %>

<% if !@vendor && (!@task || !@product_test) %>
<script type="text/javascript">
  // initialize jQueryUI Autocomplete for searching measures
  $('#search_measures').autocomplete({
    delay: 500,
    source: <%= @measure_dropdown %>, // autocomplete suggestions
    select: function(event, data) {  // fired on item select
      // gets records by measure via AJAX and rerender the records list.
      // data.item.value provides the URL for the selected measure
      $.get(data.item.value);
      // autocomplete's default action is to populate the input with the selected value
      // prevent the user from seeing an ugly URL in their search box here
      event.preventDefault();
    },
    focus: function(event, data) { event.preventDefault(); } // fired on item focus
  });

  // add and remove some classes from the generated autocomplete widget
  $('#search_measures').data('ui-autocomplete')._renderItem = function(ul, item) {
    return $('<li class="list-group-item">').append(item.label).appendTo(ul);
  }
  $('#search_measures').data('ui-autocomplete')._renderMenu = function(ul, items) {
    var that = this;
    $.each(items, function(index, item) {
      that._renderItemData(ul, item);
    });
    $(ul).removeClass('ui-widget ui-widget-content').addClass('list-group');
  }

  // rerender the records list to show records from all measures if no value searched
  $('#search_measures').on('keyup', function() {
    if (!$(this).val()) {
      $("#records_list").html("<%= escape_javascript(render 'records_list', :patients => @patients, :measure => @measure, :population_set_hash => @population_set_hash, :product_test => @product_test, :bundle => @bundle, :task => @task ) %>");
    }
  })
</script>
<% end %>
