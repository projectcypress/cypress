<%

# this partial is recursive and requires local varibles:

#   doc
#   error_map
#   error_attributes
#   execution_errors

%>

<% return if doc.nil? %>

<% error_id = (doc['error_id']) %>

<div <%=  error_id ? %{id=xerror_#{error_id}} : '' %> class="indent ">
  <% if error_id %>
    <% # create error message to be displayed in popup %>
    <% errors = execution_errors.select { |ee|  ee.location == error_map.invert[error_id] }.sort_by(&:msg_type) %>
    <% errors.each do |err| %>
      <span id = <%= "error_#{err.id}" %>></span>
    <% end %>
  <% end %>
  <% case node_type(doc.node_type) %>
  <% when :element %>
    <% prefix = doc.namespace.nil? ? "" : (doc.namespace.prefix || "") %>
    <% doc_name = prefix == "" ? doc.name : "#{prefix}:#{doc.name}" %>
    <div <%=  error_id ? "class='error'".html_safe : '' %> >
    <span class="markup">&lt;</span>
    <span class="start-tag "><%= doc_name %></span>
    <% doc.namespace_definitions.each do |ns| %>
      <% ns_prefix = ns.prefix.nil? ? "xmlns" : "xmlns:#{ns.prefix}" %>
      <span class="attribute-name"> <%=ns_prefix%>="<%=ns.href%>"</span>
    <% end %>
    <% doc.attributes.each do |att| %>
      <% attribute = att[1] %>
      <% if attribute.name != 'error_id' %>
        <% att_prefix = attribute.namespace.nil? ? "" : (attribute.namespace.prefix || "") %>
        <% att_name = att_prefix == "" ? attribute.name : "#{att_prefix}:#{attribute.name}" %>     
        <span class="attribute-name <%= error_attributes.index(attribute) ? 'attribute_error' : '' %>"> <%= att_name %></span>
        <span class="markup">=</span>
        <span class="attribute-value">"<%=attribute.value %>"</span>
      <% end %>
    <% end %>
 
  <% when :document %>
    <div>
      <span class="markup">&lt;?</span><span class="start-tag">xml</span>
      <span class="attribute-name"> version</span><span class="markup">=</span><span class="attribute-value">""</span>
      <span class="attribute-name"> encoding</span><span class="markup">=</span><span class="attribute-value">""</span>
      <span class="markup">?&gt;</span>
    </div>
  <% end %>

  <% if doc.children.length > 0 %>
    <% if node_type(doc.node_type) == :element %>
      <span class="markup">&gt;</span></div>
      <% if error_id %>
        <% popup_title, popup_button_text, popup_content = popup_attributes(errors) %>
        <% # button to display popup with error message(s) %>
        <% btn_errors = '' %>
        <% errors.each { |error| btn_errors << " error_#{error.id}" } %>
        <button type = "button" class="btn btn-warning error-popup-btn pull-right <%= btn_errors %>" data-toggle="popover" data-placement = "bottom" title = '<%= popup_title %>' data-html = 'true' data-content = '<%= popup_content %>'>
          <i class="fa fa-fw fa-comment" data-error="<%= %{error_#{error_id}} %>" aria-hidden="true"></i> <span><%= popup_button_text %></span>
        </button>
      <% end %>
    <% end %>

    <% doc.children.each do |child| %>
      <% case node_type(child.node_type) %>
      <% when :attribute %>
        <% # should not happen but just in case %>
      <% when :text %>
        <% # indent if leaf on tree %>
        <div class = "<%= child.child.nil? ? 'text indent' : 'text' %>">
          <%= child.content %>
        </div>
      <% when :element %>
        <%= render :partial=>"test_executions/results/node" , :locals => { :doc=>child, :error_map=>error_map, :error_attributes=>error_attributes, :execution_errors=>execution_errors } %>
      <% when :cdata %>
        <% # JB: this partial currently does not exist. I am leaving this here to error in that situation %>
        <%=  render :partial=>"cdata", :locals => { :cdata=>child } %>
      <% when :comment %>
        <% begin %>
          <div class="comment indent"><%= child.to_s %></div>
        <% rescue %>
          <% # not doing anything here - I have seen issues with comments having illeagle chars in them so this is a precautionary step %>
        <% end %>
      <% when :instruction %>
        <div class="indent pi">&lt;?<%= child.name %> <%= child.content %>?&gt;</div>
      <% end %>
    <% end %>

    <% if node_type(doc.node_type) == :element %>
      <span class="markup">&lt;/</span><span class="end-tag"><%= doc_name %></span><span class="markup">&gt;</span>
    <% end %>

  <% # JB: doc has no children %>
  <% else %>
    <% if node_type(doc.node_type) == :element %>
      <span class="markup">/&gt;</span></div>
    <% end %>
  <% end %>
</div>
