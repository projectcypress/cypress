  
  <div>
    <h2>Measure Calculations</h2>
    <% {  continuous_measures => RecordsHelper::CV_POPULATION_KEYS,
          proportion_measures => RecordsHelper::PROPORTION_POPULATION_KEYS,
          ratio_measures => RecordsHelper::RATIO_POPULATION_KEYS
        }.each do |measures, pop_keys| %>
      <% if measures.length.positive? %>
        <% next if (patient.measure_relevance_hash.keys & measures.map { |m| m.id.to_s }).empty? %>
        <table class="table table-condensed">
          <thead>
            <tr>
              <td></td>
              <% pop_keys.each do |population| %>
                <th scope="col" class="text-center"><%= population_label(@task.bundle, population) %></th>
              <% end %>
            </tr>
          </thead>
          <tbody>
            <% result_values = get_result_values_for_patient(@individual_results, patient.id, pop_keys, 'measure_id') %>
            <% observation_values = get_observation_values_for_patient(@individual_results, patient.id, 'measure_id') %>
            <% measures.each do |m| %>
              <% m.population_sets_and_stratifications_for_measure.each do |population_set_hash| %>
                <% result_key = "#{m.id}|#{m.key_for_population_set(population_set_hash)}" %>
                <% next unless result_values[result_key] && result_values[result_key]['IPP'] > 0 %>
                <tr>
                  <th class="abbreviated" scope="row">
                    <%= measure_display_name(m, population_set_hash) %>
                  </th>
                  <% result_values[result_key]&.each do |population, value| %>
                    <!-- Observations are dealt with separately since there can be more than one per measure. -->
                    <% next if population == 'OBSERV' %>
                    <td class="text-center">
                      <span class="sr-only">Measure <%= m.description %> population <%= population %> result: </span>
                      <!-- This is the relevant piece of the calculation_result_icon partial ported over to here. Rendering each circle in its own partial is far too slow and causes the application to take up to 8 seconds longer to load on some pages. -->
                      <% if value && value.positive? %>
                        <span class="sr-only">Pass</span>
                        <span class="fa-stack result-marker">
                          <% if export %>
                            <div class="exportcircle">
                              <% unless value == 1 && m.calculation_method != 'EPISODE_OF_CARE' %>
                                <strong class="fa-stack-1x result-text"><span class="sr-only">value of </span><%= value %></strong>
                              <% end %>
                            </div>
                          <% else %>
                            <%= icon('fas fa-stack-2x', 'circle', :"aria-hidden" => true) %>
                            <% unless value == 1 && m.calculation_method != 'EPISODE_OF_CARE' %>
                              <strong class="fa-stack-1x result-text"><span class="sr-only">value of </span><%= value %></strong>
                            <% end %>
                          <% end %>

                        </span>
                      <% else %>
                        <span class="sr-only">Fail</span>
                        <% if export %>
                          <span class="fa-stack result-marker">
                            <div class="exportcircle exportcircle-empty"></div>
                          </span>
                        <% else %>
                          <%= icon('far fa-2x empty-marker', 'circle', :"aria-hidden" => true) %>
                        <% end %>

                      <% end %>
                    </td>
                  <% end %>
                  <% if observation_values[result_key] %>
                    <td class="text-center"><% observation_values[result_key].each do |ov| %><%= ov.join('|') %><br/><% end %></td>
                  <% end %>
                </tr>

                <% if APP_CONSTANTS['risk_variable_measures'].map { |rvm| rvm['hqmf_id'] }.include? m.hqmf_id %>
                  <% @individual_results.select { |ir| ir.measure_id == m.id && ir.patient_id == patient.id }.each_with_index do |ir, index| %>
                    <% if m.key_for_population_set(population_set_hash) == ir.population_set_key %>
                      <tr><td colspan="<%= pop_keys.size + 1 %>"><button class="collapsible">View Risk Variables</button>
                      <div class="<%= "collapse-content" unless export %>">
                        <%= render partial: 'records/risk_variable_display', :locals => { individual_result: ir } %>
                      </div>
                      </td></tr>
                    <% end %>
                  <% end %>
                <% end %>
              <% end %>
            <% end %>
          </tbody>
        </table>
      <% end %>
    <% end %>



    <% if result_measures %>
    <table class="table table-condensed">
      <tbody>
        <% result_measures.each do |m| %>
          <% ir = @individual_results.select { |ir| ir.measure_id == m.id && ir.patient_id == patient.id }.first %>
          <% next unless ir %>
          <%= render partial: 'records/core_clinical_data_elements_display.html', :locals => { individual_result: ir, measure: m, export: export, bundle: @task.bundle } %>
        <% end %>
      </tbody>
    </table>
  <% end %>




  </div>