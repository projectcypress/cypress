<%
#
# renders the errors for the most recent test execution for the given task.
#
# must specify local variable "execution"
#
%>

<% if execution.status_with_sibling == 'incomplete' %>
  <p class="lead row bg-info execution-status"><i class="fas fa-fw fa-spin fa-sync-alt text-info"></i> In Progress</p>
  <p>You do not need to reload your browser. Results will automatically display when the tests are done running.</p>
  <% # ajax contacts test_execution's show controller action with format: 'js'. controller then directs to show.js.erb which will wait, then re-render %>
  <script>
    $.ajax({url: "<%= request.env['PATH_INFO'] %>", type: "GET", dataType: 'script', data: { partial: 'execution_results' }});
  </script>

<% else %>
  <% if passing = execution.status_with_sibling == 'passing'%>
    <%= render partial: 'test_executions/results/passing_result', locals: { execution: execution, execution_type: nil } %>
  <% elsif execution.errored_or_sibling_errored? %>
    <% [execution, execution.sibling_execution].compact.each do |ex| %>
      <% ex_type = ex.task._type[0, 2] # get first two letters e.g. C1 or C3 %>
      <% if ex.errored? %>
        <p class="lead row bg-warning execution-status"><i class="fa fa-fw fa-exclamation-circle text-warning" aria-hidden="true"></i> <%= ex_type %> Execution: An internal error occurred</p>
      <% elsif ex.passing? %>
        <%= render partial: 'test_executions/results/passing_result', locals: { execution: ex, execution_type: ex_type } %>
      <% elsif ex.failing? %>
        <p class="lead row bg-danger execution-status">
          <i class="fa fa-fw fa-times-circle text-danger" aria-hidden="true"></i> <%= ex_type %> Execution:
          <%= execution_failure_message(ex) %>
        </p>
      <% end %>
    <% end %>
  <% else %>
    <p class="lead row bg-danger execution-status">
      <i class="fa fa-fw fa-times-circle text-danger" aria-hidden="true"></i>
      <%= execution_failure_message(execution) %>
    </p>
  <% end %>

  <% collected_errors = collected_errors(execution) %>

  <% if collected_errors[:exception] %>
    <h2>An internal error occurred when loading this page</h2>
    <p><%= collected_errors[:exception] %></p>
    <span class="help-block">Please report this issue to the Cypress team at <a href="https://github.com/projectcypress/cypress/issues" target="_blank">https://github.com/projectcypress/cypress/issues</a> and include: the uploaded file, the measure being tested, and the error message received.</span>
  <% end %>

  <% if collected_errors.nonfile.count.positive? %>
    <h2>Missing or Duplicate Files</h2>
    <ul class="fa-ul">
      <% collected_errors.nonfile.each do |error_message| %>
        <li><i class="fa-li fa fa-times" aria-hidden="true"></i> <%= error_message %></li>
      <% end %>
    </ul>
  <% end %>

  <% if collected_errors.files.values.any? { |err| err.count.positive? } %>
    <h2><%= "Errors and " unless passing %>Warnings</h2>
    <div id="xml-tabs" class="hidden file-error-tabs short-tabs">
      <ul>
        <% collected_errors.files.each do |file_name, error_result| %>
          <li>
            <a href=<%= "##{execution.id}_#{file_name.gsub(/[\W]/,'_')}" %>>
              <% total_errors = error_result.keys.map{ |s| error_result[s].execution_errors.count }.reduce(&:+) %>
              <% if total_errors.positive? %>
                <div class="file-name">
                  <% if error_result.keys.any? { |s| s != 'Other Warnings' && s != 'CMS Warnings' && error_result[s].execution_errors.count.positive?} %>
                    <i aria-hidden='true' class='fa fa-fw fa-times text-danger'></i>
                  <% else %>
                    <i aria-hidden='true' class='fa fa-fw fa-exclamation-triangle text-warning'></i>
                  <% end %>
                  <%= file_name %>
                </div>
                <div class="file-badge">
                  <span class="badge pull-right">
                    <%= total_errors %>
                    <span class="sr-only">errors</span>
                  </span>
                </div>
              <% else %>
                <div class="file-name">
                  <i aria-hidden='true' class='fa fa-fw fa-check text-success'></i>
                  <%= file_name %>
                  <span class="sr-only">no errors</span>
                </div>
              <% end %>
            </a>
          </li>
        <% end %>
      </ul>

      <% collected_errors.files.each do |file_name, error_result| %>
        <div id=<%= "#{execution.id}_#{file_name.gsub(/[\W]/,'_')}" %>>
          <%= render partial: 'test_executions/results/execution_results_for_file', locals: { execution: execution, file_name: file_name, error_result: error_result, is_passing: passing, on_execution_show_page: true } %>
        </div>
      <% end %>
    </div>
  <% end %>
<% end %>
