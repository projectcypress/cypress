<%

# local variables
#
#   test  (MeasureTest)
#   task  (Task)        for   MeasureTest: should be C1Task or C2Task. should NOT be C3Cat1Task or C3Cat3Task since c3 test executions are executed
#                                          when c1 or c2 test executions are created
#                       for FilteringTest: should be Cat1FilterTask or Cat3FilterTask

%>

<% tasks = with_c3_task(task) %>

<% if test.state != :ready %>
  <% if test.state == :queued %>
    <i class="fa fa-fw fa-circle text-muted" aria-hidden="true"></i>
    <span class="label label-default">queued</span>
  <% else test.state == :building %>
    <i class="fa fa-fw fa-cog fa-spin" aria-hidden="true"></i>
    <span class="label label-default">building</span>
  <% end %>
<% else %>
  <% case tasks_status(tasks) %>
  <% when 'passing' %>
    <i class = 'fa fa-fw fa-check-circle text-success' aria-hidden="true"></i>
    <%= link_to 'view', new_task_test_execution_path(task), :class => "label label-success" %>
    <%= render partial: '/products/product_test_upload', locals: { task: task } %>
  <% when 'failing'%>
    <i class = 'fa fa-fw fa-play-circle text-danger' aria-hidden="true"></i>
    <%= link_to 'retry', new_task_test_execution_path(task), :class => "label label-danger" %>
    <%= render partial: '/products/product_test_upload', locals: { task: task } %>
  <% when 'errored'%>
    <i class = 'fa fa-fw fa-exclamation-circle text-warning' aria-hidden="true"></i>
    <%= link_to 'retry', new_task_test_execution_path(task), :class => "label label-warning" %>
    <%= render partial: '/products/product_test_upload', locals: { task: task } %>
  <% when 'incomplete' %>
    <% if should_reload_product_test_link?(tasks) %>
      <i class = 'fa fa-fw fa-gavel fa-spin text-testing' aria-hidden = 'true'></i>
      <%= link_to 'testing...', new_task_test_execution_path(task), :class => 'label label-default' %>
    <% else %>
      <i class = 'fa fa-fw fa-play-circle text-info' aria-hidden="true"></i>
      <%= link_to 'start', new_task_test_execution_path(task), :class => "label label-info" %>
      <%= render partial: '/products/product_test_upload', locals: { task: task } %>
    <% end %>
  <% else %>
    <i class = 'fa fa-fw fa-play-circle text-info' aria-hidden="true"></i>
    <%= link_to 'start', new_task_test_execution_path(task), :class => "label label-info" %>
    <%= render partial: '/products/product_test_upload', locals: { task: task } %>
  <% end %>
<% end %>

<% if should_reload_product_test_link?(tasks) %>
  <script>
    $.ajax({url: "<%= request.env['PATH_INFO'] %>", type: "GET", dataType: 'script', data: { partial: 'filtering_test_link', task_id: "<%= task.id.to_s %>" }});
  </script>
<% end %>
